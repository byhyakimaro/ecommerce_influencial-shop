import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { parseCookies } from 'nookies'
import { GetStaticPaths } from 'next'
import Image from 'next/image'
import Header from '@/contexts/header'
import Footer from '@/contexts/footer'
import TypePayments from '@/contexts/typePayments'
import { useState } from 'react'
import { Canvas } from '@/contexts/imgProducts'

export default function Home({ product }: any) {
  const [showComponent, setShowComponent] = useState(false)

  return (
    <>
      <Head>
        <title>Influencial Shop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header></Header>
      <div className={ styles.containerProduct }>
        <h1 className={ styles.Title } > { product.Title } </h1>
        <div className={styles.containerItem}>
          <div className={ styles.containerImage }>
            <div>
              <Canvas url={ product.Image }></Canvas>
            </div>
          </div>
          <div className={ styles.containerDescription }>
            <div> Vendido e Entregue Por<strong>{ "InfluencialShop" }</strong> | { "Em Estoque" } </div>
            <div>{ product.Evaluation } / 5 - ({ product.CountEvaluation })</div>
            <div className={ styles.Price } > { (product.Price).toLocaleString('pt-br',{style: 'currency', currency: 'BRL'}) } </div>
            <div>À vista no PIX com até 10% OFF</div>
            <button onClick={() => setShowComponent(true)}>Ver mais Opcoes de Pagamento</button>
            <div className={ styles.buyBottom }>
              <a href={ `../precart/${ product.Code }` }>
                <button name="buy">Compre Agora</button>
              </a>
            </div>
            <h3>Description</h3>
            <br></br>
            <div>{product.Description.InformationText}</div>
            <br></br>
            <table>
              <tbody>
              { product.Description.technicalSpecifications.map((information:any, index:any)=>{
                return (

                  <tr key={index}>
                    <th>{information.Title}</th>
                    <td>{information.Text}</td>
                  </tr>
                )}) 
              }
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <Footer></Footer>
      {showComponent && <TypePayments ></TypePayments>}
    </>
  )
}

Home.getInitialProps = async (ctx: any) => {

  const { 'infshop.token': token } = parseCookies(ctx)
  const { product: productId } = ctx.query

  fetch(`http://localhost:3000/api/products/countproduct`,
  {
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      method: "POST",
      body: JSON.stringify({
        token,
        itemCode: productId
      })
  })

  const product = await fetch(`http://localhost:3000/api/product/${productId}`)

  if (product.status === 200) {
    return {
      product: await product.json()
    }
  }
}

const getStaticPaths: GetStaticPaths = async () => {
  

  return {
    paths: [],
    fallback: false
  }
}