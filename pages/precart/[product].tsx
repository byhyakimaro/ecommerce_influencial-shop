import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { parseCookies } from 'nookies'
import { GetStaticPaths } from 'next'
import Header from '@/contexts/header'
import Footer from '@/contexts/footer'

export default function Home({ product, i18n, User }: any) {

  const language = User?.user?.language ? User?.user?.language : 'en-us'
  const currency = User?.user?.currency ? User?.user?.currency : 'USD'

  return (
    <>
      <Head>
        <title>Influencial Shop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header></Header>
      <div className={ styles.precart }>
        <div className={ styles.productInfo } >
          <img src={ product.Image }></img>
          <div>{ product.Title }</div>
          <h2>{ (product.Price).toLocaleString(language, {style: 'currency', currency: currency}) }</h2>
        </div>
        <div className={ styles.buttonsInfo }>
          <h3>{i18n.statusCart}</h3>
          <div className="break"></div>
          <a href="..">{i18n.keepBuying}</a>
          <a href="../cart">{i18n.toCart}</a>
        </div>
      </div>
      <div className={ styles.productsRelated }>
        <div>{i18n.productsRelated}</div>
      </div>
      <Footer></Footer>
    </>
  )
}

Home.getInitialProps = async (ctx: any) => {

  const { 'infshop.token': token } = parseCookies(ctx)
  const host: any = process.env.HOST_API_URL
  const { product: productId } = ctx.query

  fetch(`${host}/api/products/cartproduct`,
  {
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      method: "POST",
      body: JSON.stringify({
        token,
        itemCode: productId
      })
  })

  const product = await fetch(`${host}/api/product/${productId}`)

  const User = await fetch(`${host}/api/auth/recovery/token`,
  {
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/json'
    },
    method: "POST",
    body: JSON.stringify({ token: token })
  })
  const dataUser = await User.json()

  const language = dataUser?.user?.language ? dataUser?.user?.language : 'en-us'

  const localesFetch = await fetch(`${host}/locales/${language}/precart.json`)
  const locales = await localesFetch.json()

  if (product.status === 200) {
    return {
      i18n: locales,
      User: dataUser,
      product: await product.json()
    }
  }
}

const getStaticPaths: GetStaticPaths = async () => {
  

  return {
    paths: [],
    fallback: false
  }
}